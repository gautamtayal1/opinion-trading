generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  phoneNumber String   @unique
  balance     Int      @default(1000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
  OTP         OTP[]
}

model Event {
  id          String      @id @default(cuid())
  slug        String      @unique
  description String
  title       String
  start_date  DateTime
  end_date    DateTime
  sot         String
  status      EventStatus @default(ONGOING)
  traders     Int         @default(0)
  trades      Trade[]
}

model Order {
  id          String      @id
  market      String
  price       Float
  quantity    Int
  executedQty Int?
  createdAt   DateTime    @default(now())
  user        User        @relation(references: [id], fields: [userId])
  userId      String
  status      OrderStatus @default(PENDING)
  trades      Trade[]
  side        TradeSide
}

model Trade {
  id          String    @id @default(cuid())
  orderId     String
  order       Order     @relation(references: [id], fields: [orderId])
  otherUserId String
  quantity    Int
  price       Float
  eventSlug   String
  event       Event     @relation(references: [slug], fields: [eventSlug])
  side        TradeSide
}

model OTP {
  id          String   @id @default(cuid())
  code        String
  phoneNumber String
  isVerified  Boolean  @default(false)
  expiresAt   DateTime
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  createdAt   DateTime @default(now())
}

model Depth {
  id           String   @id @default(cuid())
  eventSlug    String   @unique
  bids         Json
  asks         Json
  currentPrice Int
  createdAt    DateTime @default(now())
}

enum EventStatus {
  ONGOING
  ENDED
}

enum TradeSide {
  YES
  NO
}

enum PayoutStatus {
  PENDING
  COMPLETED
  FAILED
}

enum OrderStatus {
  PENDING
  FILLED
}
